image:
  pullPolicy: Always

imagePullSecrets:
  - name: github

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 6
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 120

resources: {}
# resources:
#   requests:
#     cpu: 128m
#     memory: 2Gi
#   limits:
#     cpu: 500m
#     memory: 4Gi

livenessProbe:
  enabled: false
  failureThreshold: 3
  httpGet:
    path: /
    port: 3300
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 60
  timeoutSeconds: 60
  successThreshold: 1

readinessProbe:
  enabled: false
  failureThreshold: 3
  httpGet:
    path: /
    port: 3300
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 60
  timeoutSeconds: 60
  successThreshold: 2

volumeMountsEnabled: true

volumeMounts:
  name: google-analytics-volumen
  mountPath: /app/google

volumesEnabled: true

volumes:
  name: google-analytics-volumen
  configMap:
    name: google-analytics

service:
  type: ClusterIP
  port: 3300

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

configMap:
  CANON_API: "https://app-dev.datausa.io"
  CANON_CMS_CUBES: "https://elpaso-api.datausa.io/"
  CANON_CMS_ENABLE: "true"
  CANON_CMS_FORCE_HTTPS: "true"
  CANON_CMS_GENERATOR_TIMEOUT: "600000"
  CANON_CMS_LOGGING: "true"
  CANON_CMS_MINIMUM_ROLE: "1"
  CANON_CMS_REQUESTS_PER_SECOND: "60"
  CANON_CONST_CART: "datausa-cart-v3"
  CANON_CONST_CUBE: "https://elpaso-api.datausa.io/"
  CANON_CONST_TESSERACT: "https://api-ts-dev.datausa.io/"
  CANON_DB_NAME: "datausa-cms-21-dev"
  CANON_DB_USER: "postgres"
  CANON_GEOSERVICE_API : "https://geoservice.datausa.io/api/"
  CANON_GOOGLE_ANALYTICS: "UA-70325841-1"
  CANON_LANGUAGES: "en"
  CANON_LANGUAGE_DEFAULT: "en"
  CANON_LOGICLAYER_CUBE: "https://elpaso-api.datausa.io/"
  CANON_LOGICLAYER_SLUGS: "true"
  CANON_LOGINS: "true"
  GA_KEYFILE: "/app/google/googleAnalyticsKey.json"

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.org/client-max-body-size: "1000m"
    nginx.org/proxy-buffer-size: "32k"
    nginx.org/proxy-buffers: "8 32k"
    nginx.org/proxy-busy-buffers-size: "256k"
    nginx.org/proxy-connect-timeout: "420s"
    nginx.org/proxy-send-timeout: "420s"
    nginx.org/proxy-read-timeout: "420s"
    nginx.org/websocket-services: "canon-site"
    nginx.org/location-snippets: |
      add_header Access-Control-Allow-Origin *;
    nginx.org/server-snippets: |
      if ($scheme != "https") {
          return 308 https://$host$request_uri;
      }
  hosts:
    - host: app-dev.datausa.io
      paths:
        - /
        - /ws
  tls:
    - secretName: canon-site-tls
      hosts:
        - app-dev.datausa.io
