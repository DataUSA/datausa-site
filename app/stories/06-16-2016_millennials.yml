title: "What do Millennials do?"
description: "A look at which occupations Millennials are gravitating to or avoiding."
image: "/images/profile/splash/2185.jpg"
authors:
  - name: Daniel Byler
    title: Data Scientist, Deloitte Services LP
    image: "/images/story/authors/byler.png"
    about:
      - "Daniel Byler is a data scientist with Deloitte Services LP where he manages a portfolio of quantitative projects across Deloitte’s research agenda. Prior to his current role, he supported clients in large federal agencies on data-focused projects."

topics:
  - descriptions:
      - "Millennials—defined as <a target='_blank' href='http://dupress.com/articles/understanding-millennials-generational-differences/
    '>people born between 1980 and 1995</a>—are just over a third of the US workforce. Despite this, Millennials manage to be the majority in two occupational categories: Military Occupations and Food Service Workers. Within these two categories, there are substantial differences in how the two genders stack up against each other."
      - "With a median age of 29, military workers represent the youngest broad occupational group. This is most likely because of the military’s <a target='_blank' href='http://www.military.com/military-fitness/marine-corps-fitness-requirements/usmc-physical-fitness-test'>high physical standards</a>, formal standards of <a target='_blank' href='http://www.military.com/join-armed-forces/join-the-military-basic-eligibility.html'>hiring young people</a>, and early retirement (often after just <a target='_blank' href='http://www.militarytimes.com/story/military/benefits/retirement/2015/11/23/reiterment-changes-choices/76049640/'>20 years</a> of service). Unsurprisingly, the military is overwhelmingly made up of men."
  - title: Age by Gender for Military Occupations
    class: constrained
  - visualizations: 
    - >-
      const id = "550000";
      const colorGender = {"Male":"#1A3E61","Men":"#1A3E61","Female":"#CA3434","Women":"#CA3434"};
      const iconGender = {"Male":"/icons/visualizations/gender_mars.png","Men":"/icons/visualizations/gender_mars.png","Female":"/icons/visualizations/gender_venus.png","Women":"/icons/visualizations/gender_venus.png"};
      const {nest, sum} = libs.d3;
      const {abbreviate, bucket, commas} = formatters;
      const measure = "Total Population";
      const measureEmbedded = measure.replace(/\s/g, "%20", /\,/g, "%2C");

      return {
        data: `/api/data?PUMS Occupation=${id}&drilldowns=Gender,Age&measure=Total Population,Total Population MOE Appx&Workforce Status=true&Record Count>=5`,
        dataFormat: resp => {
          const data = resp.data;
          nest()
            .key(d => `${d.Year}_${d.Gender}`)
            .entries(data)
            .forEach(group => {
              const total = sum(group.values, d => d[measure]);
              group.values.forEach(d => d.share = d[measure] / total);
            });
          return data;
        },
        groupBy: "Gender",
        groupPadding: 10,
        legendConfig: {
          label: "",
          shapeConfig: {
            backgroundImage: d => iconGender[d.Gender]
          }
        },
        legendTooltip: {
          tbody: []
        },
        shapeConfig: {
          fill: d => colorGender[d.Gender],
          label: false
        },
        time: "Year",
        tooltipConfig: {
          tbody: [
            ["Year", d => d.Year],
            ["Age", d => d.Age],
            ["People", d => commas(d[measure])],
            ["Margin of Error", d => `± ${commas(d[`${measure} MOE Appx`])}`],
            ["Share", d => `${abbreviate(d.share * 100)}%`]
          ]
        },
        type: "LinePlot",
        x: "Age",
        xConfig: {
          title: "AGE",
          labelRotation: false,
          tickFormat: d => d % 5 === 0 ? d : ""
        },
        xSort: (a, b) => a["ID Age"] - b["ID Age"],
        y: "Total Population",
        yConfig: {
          tickFormat: d => commas(d),
          title: "PEOPLE IN WORKFORCE"
        }
      }
  - descriptions:
      - "Food service workers make up the second youngest occupation. With an average salary of $16,202, these jobs are commonly taken by Millennials as they attempt to enter the economy. There is only a slightly larger percentage of women in this profession, making it a relatively gender neutral occupation category."
  - title: Age by Gender for Food Preparation & Serving Occupations
    class: constrained
  - visualizations: 
    - >-
      const id = "350000";
      const colorGender = {"Male":"#1A3E61","Men":"#1A3E61","Female":"#CA3434","Women":"#CA3434"};
      const iconGender = {"Male":"/icons/visualizations/gender_mars.png","Men":"/icons/visualizations/gender_mars.png","Female":"/icons/visualizations/gender_venus.png","Women":"/icons/visualizations/gender_venus.png"};
      const {nest, sum} = libs.d3;
      const {abbreviate, bucket, commas} = formatters;
      const measure = "Total Population";
      const measureEmbedded = measure.replace(/\s/g, "%20", /\,/g, "%2C");

      return {
        data: `/api/data?PUMS Occupation=${id}&drilldowns=Gender,Age&measure=Total Population,Total Population MOE Appx&Workforce Status=true&Record Count>=5`,
        dataFormat: resp => {
          const data = resp.data;
          nest()
            .key(d => `${d.Year}_${d.Gender}`)
            .entries(data)
            .forEach(group => {
              const total = sum(group.values, d => d[measure]);
              group.values.forEach(d => d.share = d[measure] / total);
            });
          return data;
        },
        groupBy: "Gender",
        groupPadding: 10,
        legendConfig: {
          label: "",
          shapeConfig: {
            backgroundImage: d => iconGender[d.Gender]
          }
        },
        legendTooltip: {
          tbody: []
        },
        shapeConfig: {
          fill: d => colorGender[d.Gender],
          label: false
        },
        time: "Year",
        tooltipConfig: {
          tbody: [
            ["Year", d => d.Year],
            ["Age", d => d.Age],
            ["People", d => commas(d[measure])],
            ["Margin of Error", d => `± ${commas(d[`${measure} MOE Appx`])}`],
            ["Share", d => `${abbreviate(d.share * 100)}%`]
          ]
        },
        type: "LinePlot",
        x: "Age",
        xConfig: {
          title: "AGE",
          labelRotation: false,
          tickFormat: d => d % 5 === 0 ? d : ""
        },
        xSort: (a, b) => a["ID Age"] - b["ID Age"],
        y: "Total Population",
        yConfig: {
          tickFormat: d => commas(d),
          title: "PEOPLE IN WORKFORCE"
        }
      }
  - descriptions:
      - "On the other hand, there are specific occupations where Millennials are much rarer. Management occupations and transportation occupations are the two broad occupational groups with the lowest employment rate by Millennials."
      - "In management, this could be due to millennials lacking the experience required by some employers for these positions. In fact, a 25 year old male is over 60 percent more likely to be in food preparation than in a management occupation. Twenty five year old CEO’s may make headlines but the reality is that twenty five year olds are much more likely to be cooking food than cooking up major business decisions."
  - title: Age by Gender for Management Occupations
    class: constrained
  - visualizations: 
    - >-
      const id = "110000";
      const colorGender = {"Male":"#1A3E61","Men":"#1A3E61","Female":"#CA3434","Women":"#CA3434"};
      const iconGender = {"Male":"/icons/visualizations/gender_mars.png","Men":"/icons/visualizations/gender_mars.png","Female":"/icons/visualizations/gender_venus.png","Women":"/icons/visualizations/gender_venus.png"};
      const {nest, sum} = libs.d3;
      const {abbreviate, bucket, commas} = formatters;
      const measure = "Total Population";
      const measureEmbedded = measure.replace(/\s/g, "%20", /\,/g, "%2C");

      return {
        data: `/api/data?PUMS Occupation=${id}&drilldowns=Gender,Age&measure=Total Population,Total Population MOE Appx&Workforce Status=true&Record Count>=5`,
        dataFormat: resp => {
          const data = resp.data;
          nest()
            .key(d => `${d.Year}_${d.Gender}`)
            .entries(data)
            .forEach(group => {
              const total = sum(group.values, d => d[measure]);
              group.values.forEach(d => d.share = d[measure] / total);
            });
          return data;
        },
        height: 500,
        groupBy: "Gender",
        groupPadding: 10,
        legendConfig: {
          label: "",
          shapeConfig: {
            backgroundImage: d => iconGender[d.Gender]
          }
        },
        legendTooltip: {
          tbody: []
        },
        shapeConfig: {
          fill: d => colorGender[d.Gender],
          label: false
        },
        time: "Year",
        tooltipConfig: {
          tbody: [
            ["Year", d => d.Year],
            ["Age", d => d.Age],
            ["People", d => commas(d[measure])],
            ["Margin of Error", d => `± ${commas(d[`${measure} MOE Appx`])}`],
            ["Share", d => `${abbreviate(d.share * 100)}%`]
          ]
        },
        type: "LinePlot",
        x: "Age",
        xConfig: {
          title: "AGE",
          tickFormat: d => d % 5 === 0 ? d : ""
        },
        xSort: (a, b) => a["ID Age"] - b["ID Age"],
        y: "Total Population",
        yConfig: {
          tickFormat: d => commas(d),
          title: "PEOPLE IN WORKFORCE"
        }
      }
  - descriptions:
      - "Transportation workers are the occupation with the second oldest median age. Transportation workers are also majority male. This may reflect a <a target='_blank' href='http://www.bls.gov/news.release/union2.nr0.htm'>high level of unionization</a> (which would tend to protect older, more traditional workers) in fields such as truck driving and railroads. In the future, it could potentially reflect technology as well. With the <a target='_blank' href='http://www.technobuffalo.com/2016/03/07/driverless-trucks-to-hit-u-k-roads-later-this-year/'>potential spread of driverless trucks</a>, this may be an occupation that few Millennials will take on, even as the existing (older) transportation workers begin to retire."
  - title: Age by Gender for Transportation Occupations
    class: constrained
  - visualizations: 
    - >-
      const id = "531000-536000";
      const colorGender = {"Male":"#1A3E61","Men":"#1A3E61","Female":"#CA3434","Women":"#CA3434"};
      const iconGender = {"Male":"/icons/visualizations/gender_mars.png","Men":"/icons/visualizations/gender_mars.png","Female":"/icons/visualizations/gender_venus.png","Women":"/icons/visualizations/gender_venus.png"};
      const {nest, sum} = libs.d3;
      const {abbreviate, bucket, commas} = formatters;
      const measure = "Total Population";
      const measureEmbedded = measure.replace(/\s/g, "%20", /\,/g, "%2C");

      return {
        data: `/api/data?PUMS Occupation=${id}&drilldowns=Gender,Age&measure=Total Population,Total Population MOE Appx&Workforce Status=true&Record Count>=5`,
        dataFormat: resp => {
          const data = resp.data;
          nest()
            .key(d => `${d.Year}_${d.Gender}`)
            .entries(data)
            .forEach(group => {
              const total = sum(group.values, d => d[measure]);
              group.values.forEach(d => d.share = d[measure] / total);
            });
          return data;
        },
        groupBy: "Gender",
        groupPadding: 10,
        legendConfig: {
          label: "",
          shapeConfig: {
            backgroundImage: d => iconGender[d.Gender]
          }
        },
        height: 500,
        legendTooltip: {
          tbody: []
        },
        shapeConfig: {
          fill: d => colorGender[d.Gender],
          label: false
        },
        time: "Year",
        tooltipConfig: {
          tbody: [
            ["Year", d => d.Year],
            ["Age", d => d.Age],
            ["People", d => commas(d[measure])],
            ["Margin of Error", d => `± ${commas(d[`${measure} MOE Appx`])}`],
            ["Share", d => `${abbreviate(d.share * 100)}%`]
          ]
        },
        type: "LinePlot",
        x: "Age",
        xConfig: {
          labelRotation: false,
          tickFormat: d => d % 5 === 0 ? d : ""
        },
        xSort: (a, b) => a["ID Age"] - b["ID Age"],
        y: "Total Population",
        yConfig: {
          tickFormat: d => commas(d),
          title: "PEOPLE IN WORKFORCE"
        }
      }
